{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"mMAoCeA,G,OA/BD,SAACC,GACX,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BACKC,MAAO,CACCC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEjBC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARvB,KAQ+BI,EAAGH,OARlC,QAUX,OACI,yBAAKW,UAAU,SACX,2CAAiBV,GACjB,qCAAU,uCAAaN,EAAMiB,MAAMC,QAAQ,Q,gCCpBjDC,E,kLAEEC,KAAKpB,MAAMqB,cAAcD,KAAKpB,MAAMsB,MAAOF,KAAKpB,MAAMuB,U,+BAGtD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MASb,OARIL,KAAKpB,MAAM0B,UACXF,EAASJ,KAAKpB,MAAMwB,OAAOjB,KAAI,SAAAR,GAAK,OAChC,kBAAC,EAAD,CACIgB,IAAKhB,EAAM4B,GACX1B,YAAaF,EAAME,YACnBgB,OAAQlB,EAAMkB,YAItB,6BACKO,O,GAhBII,aAqCNC,uBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAM/B,MAAMyB,OACpBE,QAASI,EAAM/B,MAAM2B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAIA,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAMC,GAAP,OAAkBS,EAASC,IAAoBX,EAAOC,QAI9DM,CAA4CK,YAAiBf,EAAQgB","file":"static/js/5.014da0ea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Order.css';\r\n\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        })\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n                    style={{\r\n                            textTransform: 'capitalize',\r\n                            display: 'inline-block',\r\n                            margin: '0 8px',\r\n                            border: '1px solid #ccc',\r\n                            padding: '5px'   \r\n                        }}\r\n                    key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    });\r\n    return(\r\n        <div className=\"Order\">\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n}\r\n    \r\n\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n    render(){\r\n        let orders = <Spinner />;\r\n        if(!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={+order.price}/>\r\n            ))\r\n        }\r\n        return(\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token,userId) => dispatch(actions.fetchOrders(token, userId))  \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}