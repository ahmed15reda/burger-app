{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Aux.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","axios-orders.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","assets/images/burger-logo.png","hoc/asyncComponent/asyncComponent.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENT","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParms","res","orders","fetchedOrders","key","push","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","authCheckState","getItem","instance","create","baseURL","backdrop","show","className","onClick","clicked","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","button","disabled","btnType","join","spinner","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","BurgerIngredient","ingredient","burger","transformedIngredients","Object","keys","map","ingKey","Array","_","i","reduce","arr","el","concat","module","exports","asyncComponent","impportComponent","component","cmp","default","C","logo","height","src","burgerLogo","alt","navigationItem","to","link","exact","navigationItems","isAuthenticated","drawerToggle","toolbar","drawerToggleClicked","isAuth","sideDrawer","attachedClass","open","Aux","Backdrop","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","connect","buildControl","label","removed","added","controls","buildControls","price","toFixed","control","ingredientAdded","ingredientRemoved","purchasable","ordered","OrderSummary","ingredientSummary","textTransform","Button","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","Burger","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","actions","Logout","onLogout","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoSignup","routes","withRouter","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","bacon","cheese","meat","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredient","fetchIngredientsFaild","reducer","loading","purchased","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authRedirectPath","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.078c9f1c.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENT = 'SET_INGREDIENT';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'","export const updateObject = (oldObject, updatedProperties) => {\r\n    return{\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n}","const aux = (props) => props.children;\r\n\r\nexport default aux;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return{\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return{\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return{\r\n        type: actionTypes.SET_INGREDIENT,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return{\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-83d2d.firebaseio.com/ingredients.json')\r\n            .then( response => {\r\n                dispatch(setIngredients(response.data))\r\n            })\r\n            .catch( error => {\r\n                dispatch(actionTypes.FETCH_INGREDIENTS_FAILED)\r\n            })\r\n    };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n\r\n    }\r\n} \r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n\r\n    }\r\n} \r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n} \r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n} \r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParms = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('/orders.json' + queryParms)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data){\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            })\r\n    }\r\n}","import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(()=>{\r\n            dispatch(logout());\r\n        },expirationTime * 1000)\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDRw5dINEwojjPhAQzbjml2VGc7KhpiVec';\r\n        if(!isSignup){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDRw5dINEwojjPhAQzbjml2VGc7KhpiVec';\r\n        }\r\n        axios.post(url, authData)\r\n                .then(response => {\r\n                    const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);                                     \r\n                    localStorage.setItem('token', response.data.idToken);\r\n                    localStorage.setItem('expirationDate', expirationDate);\r\n                    localStorage.setItem('userId', response.data.localId);\r\n                    dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                    dispatch(checkAuthTimeout(response.data.expiresIn))\r\n                })\r\n                .catch(err => {\r\n                    dispatch(authFail(err.response.data.error));\r\n                })\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout()); \r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }else{\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n            \r\n        }\r\n    }\r\n} \r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-83d2d.firebaseio.com/'  \r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport './Backdrop.css'\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../../../hoc/Aux';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport './Modal.css';\r\n\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <Backdrop show = {this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className=\"Modal\"\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n} \r\n\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button \r\n        disabled={props.disabled}\r\n        className={[\"Button\", [props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst spinner = () => (\r\n    <div className=\"Loader\">Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Aux'\r\n\r\nconst withErrorHandler = (WrappedComponent , axios) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error: null\r\n        }\r\n        UNSAFE_componentWillMount(){\r\n            this.reqInterceptor = axios.interceptors.request.use( req => {\r\n                this.setState({ error: null});\r\n                return req;\r\n            })\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(res => res , error => {\r\n                this.setState({ error: error})\r\n            })\r\n        }\r\n\r\n        UNSAFE_componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null })\r\n        }\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler} >\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props}/>\r\n                </Aux>\r\n                \r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render(){\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className=\"BreadBottom\"></div>;\r\n                break;\r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case('meat'):\r\n                ingredient = <div className=\"Meat\"></div>;\r\n                break;\r\n            case('cheese'):\r\n                ingredient = <div className=\"Cheese\"></div>;\r\n                break;\r\n            case('salad'):\r\n                ingredient = <div className=\"Salad\"></div>;\r\n                break;\r\n            case('bacon'):\r\n                ingredient = <div className=\"Bacon\"></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n        }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport './Burger.css';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = \r\n        Object.keys(props.ingredients).map(ingKey => {\r\n            return [...Array(props.ingredients[ingKey])].map((_,i) => {\r\n                return <BurgerIngredient key={ingKey + i}  type={ingKey}/>\r\n            });\r\n\r\n        }).reduce((arr,el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding ingredients</p>\r\n    }    \r\n    return(\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default burger;","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React, { Component } from 'react';\n\nconst asyncComponent = (impportComponent) => {\n    return class extends Component {\n        state = {\n            component: null\n        }\n\n        componentDidMount () {\n            impportComponent()\n                .then(cmp => {\n                    this.setState({component: cmp.default})\n            });\n        }\n\n        render () {\n            const C = this.state.component;\n\n            return C ? <C {...this.props} /> : null;\n        }\n    }\n}\n\nexport default asyncComponent;","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport './Logo.css'\r\n\r\n\r\nconst logo = (props) => (\r\n    <div className=\"Logo\" style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"Burger\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './NavigationItem.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className=\"NavigationItem\">\r\n        <NavLink to={props.link} exact={props.exact}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport './NavigationItems.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n\r\n    <ul className=\"NavigationItems\">\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {(props.isAuthenticated) ? (<NavigationItem link=\"/orders\">Orders</NavigationItem>) : (null)}\r\n        {!props.isAuthenticated\r\n            ? (<NavigationItem link=\"/auth\">Authenticate</NavigationItem>)\r\n            : (<NavigationItem link=\"/logout\">Logout</NavigationItem>)\r\n        }\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport './DrawerToggle.css'\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className=\"DrawerToggle\" onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport './Toolbar.css';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\n\r\nconst toolbar = (props) => (\r\n    <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className=\"LogoTool\">\r\n            <Logo />\r\n        </div>\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport './SideDrawer.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Aux';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClass = ['SideDrawer' , 'Close'];\r\n    if(props.open){\r\n        attachedClass = ['SideDrawer' , 'Open']\r\n    }\r\n    return(\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClass.join(' ')} onClick={props.closed}>\r\n                <div className=\"LogoSide\">\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth}/>\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Aux from '../Aux';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport './Layout.css'\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({ showSideDrawer: false })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar\r\n                    isAuth={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    closed={this.sideDrawerClosedHandler}\r\n                    open={this.state.showSideDrawer} />\r\n                <main className=\"main\">\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n\r\n","import React from 'react';\r\n\r\nimport './BuildControl.css'\r\n\r\nconst buildControl = (props) => (\r\n    <div className=\"BuildControl\">\r\n        <div className=\"Label\">{props.label}</div>\r\n        <button \r\n            className=\"Less\" \r\n            onClick={props.removed} \r\n            disabled={props.disabled}>Less</button>\r\n        <button \r\n            className=\"More\" \r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad'},\r\n    { label: 'Bacon', type: 'bacon'},\r\n    { label: 'Cheese', type: 'cheese'},\r\n    { label: 'Meat', type: 'meat'}\r\n]\r\n\r\nconst buildControls = (props) => (\r\n    <div className=\"BuildControls\">\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(control => (\r\n            <BuildControl \r\n                key = {control.label} \r\n                label = {control.label}\r\n                added = { () => props.ingredientAdded(control.type)}\r\n                removed = { () => props.ingredientRemoved(control.type)}\r\n                disabled = {props.disabled[control.type]}/>\r\n        ))}\r\n        <button \r\n            className=\"OrderButton\"\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n    </div>\r\n);\r\n\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../../../hoc/Aux';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n    render(){\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(ingKey => {\r\n            return (\r\n                <li key={ingKey}>\r\n                    <span style={{textTransform: 'capitalize'}}>{ingKey} : </span>\r\n                    {this.props.ingredients[ingKey]}\r\n                </li>\r\n            );\r\n        })\r\n        return(\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>Burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>Cancel</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>Continue</Button> \r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default OrderSummary;","import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\n\r\nexport class BurgerBuilder extends Component {\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount (){\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys(ingredients).map(ingKey => {\r\n            return ingredients[ingKey];\r\n        }).reduce(( sum, el) => {\r\n            return sum + el;\r\n        },0);\r\n        return sum > 0\r\n    }\r\n\r\n    purchaseHandler = () =>  {\r\n        if(this.props.isAuthenticated){\r\n            this.setState({purchasing: true})\r\n        }else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n        \r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render(){\r\n\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n\r\n        for ( let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls \r\n                        ingredientAdded = {this.props.onIngredientAdded}\r\n                        ingredientRemoved = {this.props.onIngredientRemoved}\r\n                        disabled = {disabledInfo}\r\n                        purchasable = {this.updatePurchaseState(this.props.ings)}\r\n                        ordered= {this.purchaseHandler}\r\n                        isAuth= {this.props.isAuthenticated}\r\n                        price = {this.props.price} />\r\n                </Aux>\r\n            );\r\n\r\n            orderSummary = (\r\n                <OrderSummary \r\n                    ingredients={this.props.ings}\r\n                    price={this.props.price}\r\n                    purchaseCancelled={this.purchaseCancelHandler}\r\n                    purchaseContinued={this.purchaseContinueHandler}/>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        )\r\n    }   \r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React, { Component } from 'react';\nimport { Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../store/actions/index'\n\nclass Logout extends Component {\n    componentDidMount () {\n        this.props.onLogout();\n    }\n    render() {\n        return <Redirect to=\"/\"/>;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())  \n    }\n}\n\nexport default connect(null,mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={asyncAuth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={asyncCheckout} />\n          <Route path=\"/orders\" component={asyncOrders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={asyncAuth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" /> \n        </Switch>\n      );\n    }\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    bacon: 0.7,\r\n    cheese: 0.3,\r\n    meat: 2.4\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\r\n            const updatedIngredients = updateObject(state.ingredients,updatedIngredient);\r\n            const updatedState = {\r\n                ingredients: updatedIngredients,\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n                building: true\r\n            }\r\n            return updateObject(state, updatedState);\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\r\n            const updatedIngs = updateObject(state.ingredients,updatedIng);\r\n            const updatedSt = {\r\n                ingredients: updatedIngs,\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n                building: true\r\n            }\r\n            return updateObject(state, updatedSt);\r\n}\r\n\r\nconst setIngredient = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat  \r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    });\r\n}\r\n\r\nconst fetchIngredientsFaild = (state, action) => {\r\n    return updateObject(state, { error: true });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state,action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state,action);\r\n        case actionTypes.SET_INGREDIENT: return setIngredient(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFaild(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, { purchased: false});\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject( action.orderData, { id: action.orderId });\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            })\r\n}\r\n\r\nconst fetchIngredientsFaild = (state, action) => {\r\n    return updateObject(state, { loading: false});\r\n}\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, { loading: true});\r\n}\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, { loading: false });\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state,action);\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state,action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state,action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFaild(state,action);\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state,action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state,action);\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state,action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    })\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null,\r\n        userId: null\r\n    })\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path})\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport thunk from 'redux-thunk';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\n\nconst store = createStore(rootReducer,composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n\n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}